
import React from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { useAuth } from '@/contexts/AuthContext';
import { useLanguage } from '@/contexts/LanguageContext';
import LanguageSwitcher from '@/components/LanguageSwitcher';
import { Phone, Users, FileText, TrendingUp, MapPin, Building, Heart, GraduationCap, Zap, Briefcase, Home, Baby } from 'lucide-react';
import { useNavigate } from 'react-router-dom';

const Index = () => {
  const { user, signOut } = useAuth();
  const { t, language } = useLanguage();
  const navigate = useNavigate();

  const sectors = [
    { 
      id: 'agriculture', 
      icon: 'üåæ', 
      title: language === 'te' ? '‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø‡∞Ç' : language === 'hi' ? '‡§ï‡•É‡§∑‡§ø' : 'Agriculture',
      problems: ['Crop Insurance', 'Fertilizer Issues', 'Irrigation Problems', 'Pest Control', 'Market Prices']
    },
    { 
      id: 'roads', 
      icon: 'üõ£Ô∏è', 
      title: language === 'te' ? '‡∞∞‡±ã‡∞°‡±ç‡∞≤‡±Å & ‡∞Æ‡±å‡∞≤‡∞ø‡∞ï ‡∞∏‡∞¶‡±Å‡∞™‡∞æ‡∞Ø‡∞æ‡∞≤‡±Å' : language === 'hi' ? '‡§∏‡§°‡§º‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§µ‡§∏‡§Ç‡§∞‡§ö‡§®‡§æ' : 'Roads & Infrastructure',
      problems: ['Road Repairs', 'Street Lights', 'Drainage Issues', 'Bridge Problems', 'Traffic Signals']
    },
    { 
      id: 'health', 
      icon: '‚ù§Ô∏è', 
      title: language === 'te' ? '‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø‡∞Ç' : language === 'hi' ? '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø' : 'Health',
      problems: ['Aarogyasri Issues', 'Medicine Shortage', 'Hospital Services', 'Vaccination', 'Emergency Care']
    },
    { 
      id: 'education', 
      icon: 'üéì', 
      title: language === 'te' ? '‡∞µ‡∞ø‡∞¶‡±ç‡∞Ø' : language === 'hi' ? '‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ' : 'Education',
      problems: ['School Admission', 'Scholarship Issues', 'Fee Reimbursement', 'Mid-day Meals', 'Infrastructure']
    },
    { 
      id: 'electricity', 
      icon: '‚ö°', 
      title: language === 'te' ? '‡∞µ‡∞ø‡∞¶‡±ç‡∞Ø‡±Å‡∞§‡±ç' : language === 'hi' ? '‡§¨‡§ø‡§ú‡§≤‡•Ä' : 'Electricity',
      problems: ['Power Cuts', 'Bill Issues', 'New Connection', 'Meter Problems', 'Line Faults']
    },
    { 
      id: 'employment', 
      icon: 'üíº', 
      title: language === 'te' ? '‡∞â‡∞™‡∞æ‡∞ß‡∞ø' : language === 'hi' ? '‡§∞‡•ã‡§ú‡§ó‡§æ‡§∞' : 'Employment',
      problems: ['Job Card Issues', 'NREGA Work', 'Skill Training', 'Unemployment Allowance', 'Self Help Groups']
    },
    { 
      id: 'housing', 
      icon: 'üè†', 
      title: language === 'te' ? '‡∞ó‡±É‡∞π‡∞®‡∞ø‡∞∞‡±ç‡∞Æ‡∞æ‡∞£‡∞Ç' : language === 'hi' ? '‡§Ü‡§µ‡§æ‡§∏' : 'Housing',
      problems: ['House Allocation', 'Construction Issues', 'Property Documents', 'Subsidies', 'Land Records']
    },
    { 
      id: 'welfare', 
      icon: 'üë∂', 
      title: language === 'te' ? '‡∞Æ‡∞π‡∞ø‡∞≥‡∞≤‡±Å & ‡∞™‡∞ø‡∞≤‡±ç‡∞≤‡∞≤ ‡∞∏‡∞Ç‡∞ï‡±ç‡∞∑‡±á‡∞Æ‡∞Ç' : language === 'hi' ? '‡§Æ‡§π‡§ø‡§≤‡§æ ‡§è‡§µ‡§Ç ‡§¨‡§æ‡§≤ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£' : 'Women & Child Welfare',
      problems: ['Pension Issues', 'Anganwadi Services', 'Maternity Benefits', 'Child Nutrition', 'Women Safety']
    }
  ];

  const stats = [
    { 
      title: language === 'te' ? '‡∞Æ‡±ä‡∞§‡±ç‡∞§‡∞Ç ‡∞Ö‡∞≠‡±ç‡∞Ø‡∞∞‡±ç‡∞•‡∞®‡∞≤‡±Å' : language === 'hi' ? '‡§ï‡•Å‡§≤ ‡§Ö‡§®‡•Å‡§∞‡•ã‡§ß' : 'Total Requests', 
      value: '12,456', 
      icon: FileText 
    },
    { 
      title: language === 'te' ? '‡∞™‡∞∞‡∞ø‡∞∑‡±ç‡∞ï‡∞∞‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡∞ø‡∞®‡∞µ‡∞ø' : language === 'hi' ? '‡§π‡§≤ ‡§ï‡§ø‡§è ‡§ó‡§è' : 'Resolved', 
      value: '9,823', 
      icon: TrendingUp 
    },
    { 
      title: language === 'te' ? '‡∞∞‡∞ø‡∞ú‡∞ø‡∞∏‡±ç‡∞ü‡∞∞‡±ç‡∞°‡±ç ‡∞Ø‡±Ç‡∞ú‡∞∞‡±ç‡∞≤‡±Å' : language === 'hi' ? '‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ' : 'Registered Users', 
      value: '45,678', 
      icon: Users 
    }
  ];

  const helplineNumbers = [
    { 
      title: language === 'te' ? '‡∞™‡±ç‡∞∞‡∞ß‡∞æ‡∞® ‡∞π‡±Ü‡∞≤‡±ç‡∞™‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç' : language === 'hi' ? '‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®' : 'Main Helpline', 
      number: '1800-425-2425' 
    },
    { 
      title: language === 'te' ? '‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç' : language === 'hi' ? '‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ' : 'Agriculture Support', 
      number: '1800-180-1551' 
    },
    { 
      title: language === 'te' ? '‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø ‡∞∏‡±á‡∞µ‡∞≤‡±Å' : language === 'hi' ? '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç' : 'Health Services', 
      number: '104' 
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-village-green-50 to-earth-beige-50 font-noto">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-village-green-100">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="flex items-center space-x-2">
                <Building className="h-8 w-8 text-village-green-600" />
                <div>
                  <h1 className="text-xl font-bold text-village-green-800">
                    {language === 'te' ? '‡∞ó‡±ç‡∞∞‡∞æ‡∞Æ ‡∞∏‡±ç‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞ø' : language === 'hi' ? '‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§∏‡•ç‡§™‡•Ç‡§∞‡•ç‡§§‡§ø' : 'Gram Sphoorthi'}
                  </h1>
                  <p className="text-sm text-village-green-600">
                    {language === 'te' ? '‡∞™‡±å‡∞∞ ‡∞∏‡±á‡∞µ‡∞≤ ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡∞≤‡±ç' : language === 'hi' ? '‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§∏‡•á‡§µ‡§æ ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤' : 'Citizen Services Portal'}
                  </p>
                </div>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <LanguageSwitcher />
              <Button 
                variant="outline" 
                onClick={() => navigate('/my-requests')}
                className="border-village-green-300 text-village-green-700 hover:bg-village-green-50"
              >
                {language === 'te' ? '‡∞®‡∞æ ‡∞Ö‡∞≠‡±ç‡∞Ø‡∞∞‡±ç‡∞•‡∞®‡∞≤‡±Å' : language === 'hi' ? '‡§Æ‡•á‡§∞‡•á ‡§Ö‡§®‡•Å‡§∞‡•ã‡§ß' : 'My Requests'}
              </Button>
              <Button 
                variant="outline" 
                onClick={signOut}
                className="border-red-300 text-red-700 hover:bg-red-50"
              >
                {language === 'te' ? '‡∞≤‡∞æ‡∞ó‡±ç ‡∞Ö‡∞µ‡±Å‡∞ü‡±ç' : language === 'hi' ? '‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü' : 'Logout'}
              </Button>
            </div>
          </div>
        </div>
      </header>

      {/* Welcome Section */}
      <section className="container mx-auto px-4 py-8">
        <div className="text-center mb-8">
          <h2 className="text-3xl font-bold text-village-green-800 mb-2">
            {language === 'te' ? `‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç, ${user?.user_metadata?.full_name || '‡∞™‡±å‡∞∞‡±Å‡∞°‡±Å'}!` : 
             language === 'hi' ? `‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à, ${user?.user_metadata?.full_name || '‡§®‡§æ‡§ó‡§∞‡§ø‡§ï'}!` : 
             `Welcome, ${user?.user_metadata?.full_name || 'Citizen'}!`}
          </h2>
          <p className="text-village-green-600 max-w-2xl mx-auto">
            {language === 'te' ? '‡∞Æ‡±Ä ‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø‡∞≤‡∞®‡±Å ‡∞™‡∞∞‡∞ø‡∞∑‡±ç‡∞ï‡∞∞‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞∏‡∞∞‡±à‡∞® ‡∞µ‡∞ø‡∞≠‡∞æ‡∞ó‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø. ‡∞Æ‡±á‡∞Æ‡±Å ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞â‡∞®‡±ç‡∞®‡∞æ‡∞Æ‡±Å.' :
             language === 'hi' ? '‡§Ö‡§™‡§®‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§π‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§π‡•Ä ‡§µ‡§ø‡§≠‡§æ‡§ó ‡§ö‡•Å‡§®‡•á‡§Ç‡•§ ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡§π‡§æ‡§Å ‡§π‡•à‡§Ç‡•§' :
             'Choose the right sector to resolve your issues. We are here to help you get the support you need.'}
          </p>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          {stats.map((stat, index) => (
            <Card key={index} className="border-village-green-100">
              <CardContent className="p-6">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm text-gray-600 mb-1">{stat.title}</p>
                    <p className="text-2xl font-bold text-village-green-800">{stat.value}</p>
                  </div>
                  <stat.icon className="h-8 w-8 text-village-green-600" />
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Sectors Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {sectors.map((sector) => (
            <Card 
              key={sector.id} 
              className="cursor-pointer border-village-green-100 hover:border-village-green-300 hover:shadow-lg transition-all duration-300"
              onClick={() => navigate(`/sector/${sector.id}`)}
            >
              <CardHeader className="pb-3">
                <div className="flex items-center space-x-3">
                  <span className="text-3xl">{sector.icon}</span>
                  <CardTitle className="text-lg text-village-green-800">{sector.title}</CardTitle>
                </div>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-1">
                  {sector.problems.slice(0, 3).map((problem, index) => (
                    <Badge key={index} variant="secondary" className="text-xs bg-village-green-50 text-village-green-700">
                      {problem}
                    </Badge>
                  ))}
                  {sector.problems.length > 3 && (
                    <Badge variant="secondary" className="text-xs bg-gray-100 text-gray-600">
                      +{sector.problems.length - 3} more
                    </Badge>
                  )}
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Helpline Numbers */}
        <Card className="border-village-green-100">
          <CardHeader>
            <CardTitle className="text-village-green-800 flex items-center">
              <Phone className="w-5 h-5 mr-2" />
              {language === 'te' ? '‡∞π‡±Ü‡∞≤‡±ç‡∞™‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç ‡∞®‡∞Ç‡∞¨‡∞∞‡±ç‡∞≤‡±Å' : language === 'hi' ? '‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§® ‡§®‡§Ç‡§¨‡§∞' : 'Helpline Numbers'}
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {helplineNumbers.map((helpline, index) => (
                <div key={index} className="text-center p-4 bg-village-green-50 rounded-lg">
                  <p className="text-sm text-gray-600 mb-1">{helpline.title}</p>
                  <a 
                    href={`tel:${helpline.number}`}
                    className="text-lg font-bold text-village-green-700 hover:text-village-green-800"
                  >
                    {helpline.number}
                  </a>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      </section>
    </div>
  );
};

export default Index;
